import os
import json
import paho.mqtt.client as mqtt
from confluent_kafka import Producer

# L·∫•y th√¥ng tin t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
MQTT_BROKER = os.getenv("MQTT_BROKER", "localhost")
MQTT_PORT = int(os.getenv("MQTT_PORT", "1883"))
MQTT_USERNAME = os.getenv("MQTT_USERNAME", "thaily")
MQTT_PASSWORD = os.getenv("MQTT_PASSWORD", "Th@i2004")
MQTT_TOPIC = os.getenv("MQTT_TOPIC", "test/topic")

print(MQTT_BROKER, MQTT_PORT, MQTT_USERNAME, MQTT_PASSWORD, MQTT_TOPIC)

KAFKA_BROKER = os.getenv("KAFKA_BROKER", "kafka:9092")
KAFKA_TOPIC = os.getenv("KAFKA_TOPIC", "device_status")

print(KAFKA_BROKER, KAFKA_TOPIC)
# Kh·ªüi t·∫°o Kafka Producer
producer = Producer({"bootstrap.servers": KAFKA_BROKER})

# Callback khi k·∫øt n·ªëi MQTT th√†nh c√¥ng
def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("‚úÖ K·∫øt n·ªëi MQTT th√†nh c√¥ng!")
        client.subscribe(MQTT_TOPIC)
    else:
        print(f"‚ùå K·∫øt n·ªëi MQTT th·∫•t b·∫°i v·ªõi m√£ l·ªói: {rc}")

# Callback khi nh·∫≠n tin nh·∫Øn t·ª´ MQTT
def on_message(client, userdata, msg):
    message = msg.payload.decode()
    print(f"üì© Nh·∫≠n tin nh·∫Øn: {message} t·ª´ topic {msg.topic}")
    try:
        data = json.loads(message)
        formatted_message = f"{data['Id']}|{data['TurnOn']}|{data['AccountId']}"

        # G·ª≠i tin nh·∫Øn v√†o Kafka topic
        producer.produce(KAFKA_TOPIC, key=str(data['Id']), value=formatted_message.encode())
        producer.flush()
        print(f"üöÄ ƒê√£ g·ª≠i tin nh·∫Øn v√†o Kafka topic: {KAFKA_TOPIC} v·ªõi n·ªôi dung: {formatted_message}")

    except (json.JSONDecodeError, KeyError) as e:
        print(f"‚ùå L·ªói x·ª≠ l√Ω tin nh·∫Øn: {e}")

# T·∫°o MQTT Client
client = mqtt.Client()
client.username_pw_set(MQTT_USERNAME, MQTT_PASSWORD)

# G√°n Callback
client.on_connect = on_connect
client.on_message = on_message

# K·∫øt n·ªëi MQTT
client.connect(MQTT_BROKER, MQTT_PORT, 60)

# Ch·∫°y v√≤ng l·∫∑p nh·∫≠n d·ªØ li·ªáu
client.loop_forever()
