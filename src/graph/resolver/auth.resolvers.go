package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	graph "ThaiLy/graph/generated"
	"ThaiLy/graph/model"
	"context"
	"fmt"
)

// RegisterAccount is the resolver for the registerAccount field.
func (r *mutationResolver) RegisterAccount(ctx context.Context, account model.RegisterAccount) (*model.Account, error) {
	return r.Ctrl.ControllerRegister(account)
}

// LoginAccount is the resolver for the LoginAccount field.
func (r *mutationResolver) LoginAccount(ctx context.Context, account model.LoginAccount) (*model.Account, error) {
	return r.Ctrl.ControllerLogin(account)
}

// Xinchao is the resolver for the xinchao field.
func (r *queryResolver) Xinchao(ctx context.Context) (*model.Account, error) {
	panic(fmt.Errorf("not implemented: Xinchao - xinchao"))
}

// InforAccount is the resolver for the inforAccount field.
func (r *queryResolver) InforAccount(ctx context.Context, account model.TokenAccount) (*model.Account, error) {
	return r.Ctrl.ControllerInfor(account)
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
