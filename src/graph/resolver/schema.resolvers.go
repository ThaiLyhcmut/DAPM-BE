package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"ThaiLy/graph/generated"
	"ThaiLy/graph/model"
	"context"
	"fmt"
)

// RegisterAccount is the resolver for the registerAccount field.
func (r *mutationResolver) RegisterAccount(ctx context.Context, account model.RegisterAccount) (*model.Account, error) {
	return r.Ctrl.ControllerRegister(account)
}

// LoginAccount is the resolver for the LoginAccount field.
func (r *mutationResolver) LoginAccount(ctx context.Context, account model.LoginAccount) (*model.Account, error) {
	return r.Ctrl.ControllerLogin(account)
}

// CreateHome is the resolver for the createHome field.
func (r *mutationResolver) CreateHome(ctx context.Context, home model.CreateHome) (*model.Home, error) {
	panic(fmt.Errorf("not implemented: CreateHome - createHome"))
}

// CreateArea is the resolver for the createArea field.
func (r *mutationResolver) CreateArea(ctx context.Context, area model.CreateArea) (*model.Area, error) {
	panic(fmt.Errorf("not implemented: CreateArea - createArea"))
}

// CreateEquiment is the resolver for the createEquiment field.
func (r *mutationResolver) CreateEquiment(ctx context.Context, equipment model.CreateEquiment) (*model.Equipment, error) {
	panic(fmt.Errorf("not implemented: CreateEquiment - createEquiment"))
}

// DeleteHome is the resolver for the deleteHome field.
func (r *mutationResolver) DeleteHome(ctx context.Context, home model.DeleteHome) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: DeleteHome - deleteHome"))
}

// DeleteArea is the resolver for the deleteArea field.
func (r *mutationResolver) DeleteArea(ctx context.Context, area model.DeleteArea) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: DeleteArea - deleteArea"))
}

// DeleteEquipment is the resolver for the deleteEquipment field.
func (r *mutationResolver) DeleteEquipment(ctx context.Context, equipment model.DeleteEquipment) (*model.Response, error) {
	panic(fmt.Errorf("not implemented: DeleteEquipment - deleteEquipment"))
}

// EidtHome is the resolver for the eidtHome field.
func (r *mutationResolver) EidtHome(ctx context.Context, home model.EditHome) (*model.Home, error) {
	panic(fmt.Errorf("not implemented: EidtHome - eidtHome"))
}

// EditArea is the resolver for the editArea field.
func (r *mutationResolver) EditArea(ctx context.Context, area model.EditArea) (*model.Area, error) {
	panic(fmt.Errorf("not implemented: EditArea - editArea"))
}

// GetHome is the resolver for the getHome field.
func (r *queryResolver) GetHome(ctx context.Context) ([]*model.Home, error) {
	return r.Ctrl.GetHome(ctx)
}

// InforAccount is the resolver for the inforAccount field.
func (r *queryResolver) InforAccount(ctx context.Context) (*model.Account, error) {
	return r.Ctrl.ControllerInfor(ctx)
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
