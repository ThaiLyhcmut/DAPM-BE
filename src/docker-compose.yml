services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - app-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    networks:
      - app-network
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092

  server:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    image: src-server
    env_file: 
      - .env
    networks:
      - app-network
    ports:
      - "8081:8081"

  service-auth:
    build: 
      context: .
      dockerfile: docker/serviceAuth.Dockerfile
    image: src-service-auth
    env_file: 
      - .env
    networks:
      - app-network
    ports:
      - "55555:55555"

  service-equipment:
    build: 
      context: .
      dockerfile: docker/serviceEquipment.Dockerfile
    image: src-service-equipment
    env_file: 
      - .env
    networks:
      - app-network
    ports:
      - "55556:55556"

  service-kafka:
    build: 
      context: .
      dockerfile: docker/serviceKafka.Dockerfile
    image: src-service-kafka
    env_file: 
      - .env
    networks:
      - app-network
    ports:
      - "55557:55557"

networks:
  app-network:
    driver: bridge
